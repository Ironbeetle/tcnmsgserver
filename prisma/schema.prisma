// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["fnmemberlist", "msgmanager"]
}
model fnmember {
  id           String   @id @default(uuid())
  created      DateTime @default(now())
  updated      DateTime @default(now()) @updatedAt
  birthdate    DateTime @db.Date
  first_name   String
  last_name    String
  t_number     String
  gender       String
  o_r_status   String  @default("false")
  house_number String    @default("0")
  community     String
  contact_number String
  option       String   @default("none")
  @@schema("fnmemberlist")
}
// Staff Management
model User {
  id            String    @id @default(uuid())
  created       DateTime  @default(now())
  updated       DateTime  @default(now()) @updatedAt
  f_name        String?
  l_name        String?
  email         String?   @unique
  emailVerified DateTime?
  role          String    @default("admin")
  password      String
  accounts      Account[]
  sessions      Session[]
  @@schema("msgmanager")
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@schema("msgmanager")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@schema("msgmanager")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("msgmanager")
}
